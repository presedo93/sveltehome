{
	"title": "Stack tecnológico",
	"intro": "Durante estos años, he trabajado o aprendido por hobby, diferentes lenguajes de programación y/o diferentes stacks tecnológicos. En esta página me gustaría contarte un poco sobre ellos!",
	"c++1": "C y C++ fueron los dos primeros lenguajes que aprendí durante mis años de carrera. En el caso de C fue orientado a la programación de embebidos, utilizando MCUs como TM4C123x durante mis años de carrera. En el entorno laboral, estuve un tiempo trabajando con FPGAs de la familia Zynq e implementando módulos con {{ vivado }} para aplicaciones relacionadas con la visión artificial.",
	"c++2": "C++ fue el lenguaje donde profundicé por primera vez en conceptos de desarrollo de software como la gestión de memoria, arquitecturas de software o el uso de algoritmos. Estuve trabajando con librerías como {{ opencv }} o ROS junto con MQTT o RabbitMQ. Siempre usando la std y C++11 o C++14.",
	"python1": "Pese a hacer algunas cosas con las versiones 2.x durante la carrera. Empecé a aprender Python a mitad del 2018. Venía de trabajar en proyectos relacionados con la visión artificial y decidí que quería aprender sobre el mundo de la inteligencia artificial donde python era la opción por defecto.",
	"python2": "Realicé los cursos de la Universidad de Stanford en Coursera de introduccíon y comencé a expermientar con Tensorflow v1.12. También he trabajado con {{ pytorch }} y Pytorch Lightning en tareas de detección de objetos, analisis semánticos o generación de textos!",
	"python3": "También he trabajado con frameworks para crear APIs en Python. Hace algo de tiempo con Flask y las últimas veces con {{ fastapi }}, que es una combinación perfecta para servir modelos de Machine Learning con la mayoría de los runtime que se suelen utilizar!",
	"js1": "Javascript es la navaja suiza de cualquier desarrollador... y en 2020 me embarqué en la aventura de aprender a usarlo. Bueno, realmente empecé directamente con Typescript aunque laboralmente sí he usado Javascript en proyectos relacionados con el frontend.",
	"js2": "El primer framework de JS con el que jugué fue con {{ vue }} en su versión 3.x. Ahí fue donde me familiaricé con manejar estados, stores y lógica de usuario. El siguiente paso fue {{ react }}, directamente con versiones que soportaban los componentes funcionales y los famosos hooks como useState o useEffect. De hecho, la primera versión de esta web era con NextJS. Pero como me encanta aprender sobre nuevos frameworks... decidí darle un lavado de cara a esta web usando {{ sveltekit }}!",
	"rust1": "El último de los lenguajes que he aprendido ultimamente es Rust. Llegué a este lenguaje atraído por la idea de fusionar librerias de alto nivel y conceptos extraídos de lenguajes como Ruby o JS con el detalle y bajo nivel que se puede alcanzar sin sacrificar rendimiento o arriesgarte a fallos de memoria.",
	"rust2": "Quizás también fue un poco el cariño que le tengo a C++ y lo que me parecía que estaba desaprovechado, tanto su std como la falta de herramientas que hicieran fácil desarrollar proyectos con él... Rust es el lenguaje que lo reune todo a día de hoy, además de un concepto como el {{ borrowing }} y {{ ownership }}, que aunque cuesta aprenderlo, después es muy divertido de programar!",
	"rust3": "He hecho pequeños proyectos con STM32s usando librerías de Rust para embebidos. He hecho algunos proyectos con WebAssembly (como los minesweeper y snake de la secciónd de juegos). Y más en profundidad, he trabajado haciendo APIs con actix_web o axum. Y en todos los casos puedo decir lo mismo... ha sido muy divertido trabajar con Rust.",
	"extra1": "Los 4 lenguajes de arriba son con los que más tiempo he pasado en mis años trabajando/aprendiendo. Pero también es verdad que por una cosa u otra he dedicado tiempo a otros lenguajes...",
	"extra2": "<strong>Bash</strong>: siempre me ha parecido que la capacidad para diseñar tus propios scripts puede ser el gran aliado del desarrollador... y si encima le sumas Docker, lo tienes hecho. La mayoría del tiempo que he hecho cosas con bash ha sido mientras diseñaba mis propios {{ dockerfiles }}, aún así tambien he andado liado con algunas tareas en servidores o en CI/CD que me han permitido aprenderlo.",
	"extra3": "<strong>Ruby</strong>: es mi tarea pendiente. He estado involucrado en proyectos que tenían APIs en Ruby y en los que solo he podido hacer tareas de mantenimiento o resolver incidencias. Conozco la sintaxis pero no me siento cómodo del todo con ella, aunque me parece que el lenguaje tiene conceptos muy interesantes.",
	"extra4": "<strong>Lua</strong>: desde hace un tiempo decidí probar a hacer mi propio IDE partiendo de Vim (bueno, en realidad de Neovim) después de ver configuraciones locas que tenían hechas otros desarrolladores por internet. Y así fue como estuve unos cuantos meses probando el lenguaje, toda mi experiencia tiene que ver con configurar mi IDE pero algo es algo...",
	"extra5": "<strong>Bases de datos</strong>: he trabajado tanto con bases de datos relacionales (SQL) como no relacionales (NoSQL). En el caso de las primeras, ha sido sobre todo con MySQL y PostgreSQL, algo con SQLite y muy poco con MariaDB. En el caso de las no relacionales, con MongoDB y en proyectos personales con Firebase."
}
